
import java.util.Scanner;

public class PandemicSilcoAct1 {

	public static void main(String[] args) {
		Scanner prac = new Scanner(System.in);

		// Declaramos als variables y las inicializamos
		String Direccion = " ";
		int contadorCaracterEsp = 0;
		String[] separar;
		String Ciudad = null;
		int[] numeros = new int[3];
		String Numeros1 = "";// String que almacena el numero
		String Numeros2 = "";// String que almacena el codigo postal
		String[] Ciudades = null;// String que almacena las ciudades
		String[] valores = new String[2];

		// Mostramos por pantalla la instruccion al usuario y permitimos la entrada de
		// la dirección
		System.out.println("Introduiex la entrada de text (nombre_ciudad;numero;codigopostal;ciudades;)");
		Direccion = prac.nextLine();

		// Bucle para ver si cumple con el formato deseado
		for (int i = 0; i < Direccion.length(); i++) {
			if (Direccion.charAt(i) == ';') {
				contadorCaracterEsp++;
			}
		}

		// En caso de que no se cumple con el formato deseado, muestra mensaje de error
		// y se vuelve a pedir
		while (contadorCaracterEsp != 4) {
			System.out.println("Formato Incorrecto!!");
			System.out.println("Introduiex la entrada de text (nombre_ciudad;numero;codigopostal;ciudades;)");
			Direccion = prac.nextLine();

			contadorCaracterEsp = 0;
			for (int i = 0; i < Direccion.length(); i++) {
				if (Direccion.charAt(i) == ';') {
					contadorCaracterEsp++;
				}
			}
		}

		// Separamos por cada caracter especial
		separar = Direccion.split(";");

		SepararDatosDireccion(Ciudad, Ciudades, numeros, Numeros1, Numeros2, valores, separar);

		prac.close();
	}

	// ************************************************************************************
	// ** Nombre de la función: SepararDatosDireccion
	// ** Explicación del que hace la función: Esta función separa con el metodo
	// split y los almacena en diferentes posiciones
	// ** Parámetros de entrada: String Ciudad, String[] Ciudades, int[] numeros,
	// String Numeros1, String Numeros2, String[] valores, String[] separar
	// ** Parámetros de salida: -----
	// ************************************************************************************
	public static void SepararDatosDireccion(String Ciudad, String[] Ciudades, int[] numeros, String Numeros1,
			String Numeros2, String[] valores, String[] separar) {
		// Definimos las posiciones de las separaciones
		Ciudad = separar[0];
		Numeros1 = separar[1];
		Numeros2 = separar[2];
		Ciudades = separar[3].split(",");
		numeros[0] = Integer.parseInt(Numeros1); // Convertir el string Numeros1 a integer
		valores = Numeros2.split(","); // Dividir la cadena al encontrar una coma
		numeros[1] = Integer.parseInt(valores[0]); // Almacenar el primer numero antes de la coma
		numeros[2] = Integer.parseInt(valores[1]); // Almacenar el segundo numero despues de la coma

		ResultadoDatosDireccion(Ciudad, Ciudades, numeros, Numeros1, Numeros2, valores, separar);
	}

	// ************************************************************************************
	// ** Nombre de la función: ResultadoDatosDireccion
	// ** Explicación del que hace la función: Muestra por pantalla las diferentes
	// partes con los resultados
	// ** Parámetros de entrada: String Ciudad, String[] Ciudades, int[] numeros,
	// String Numeros1, String Numeros2, String[] valores, String[] separar
	// ** Parámetros de salida: -----
	// ************************************************************************************
	public static void ResultadoDatosDireccion(String Ciudad, String[] Ciudades, int[] numeros, String Numeros1,
			String Numeros2, String[] valores, String[] separar) {
		// Mostramos el resultado por pantalla
		System.out.print("Silco actúa en " + Ciudad + " con los números " + numeros[0] + ", " + numeros[1] + " y "
				+ numeros[2] + " y cuyas ciudades colindantes son ");
		// Recorremos y mostramos cada ciudad de la dirección
		for (int i = 0; i < Ciudades.length; i++) {
			System.out.print(Ciudades[i]);
			if (i < Ciudades.length - 1) {
				System.out.print(", ");
			}

		}
		System.out.println(".");

	}
}
